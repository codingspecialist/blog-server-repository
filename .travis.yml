language: java
jdk:
  - openjdk11

branches: # 1.
  only:
    - master

before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
cache: # 2.
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'
script: "./gradlew clean build" # 3.

# CI 실행 완료 시 메일 알람
notifications: # 4.
  email:
    recipients:
      - getinthere@naver.com

before_deploy:
  - zip -r blog-server-repository *  # 압축하고 싶은 파일명 (보통 github repo 이름)
  - mkdir -p deploy
  - mv blog-server-repository.zip deploy/blog-server-repository.zip

# deploy 적을 때 들여쓰기 유의
deploy:
  - provider: s3
    acess_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: metacoding-blog-storage  # S3 버킷 이름
    region: ap-northeast-2
    skip_cleanup: true
    local_dir: deploy # travis 서버의 해당 폴더(deploy)의 파일들만 S3로 전송
    wait-until-deployed: true # deploy가 끝나면 S3-> EC2로 배포해야 해서 필요한 설정

  # 코드 디플로이에 던지기
  - provider: codedeploy
    acess_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: metacoding-blog-storage
    key: blog-server-repository.zip # S3에서 저장된 파일명
    bundle_type: zip # 번들 타입만 지정되면 자동으로 압축 풀림
    application: blog-codeDeploy # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션 이름 (대소문자 유의하자)
    deployment_group: cicd-deploy-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹 -> 현재는 하나의 EC2에만 배포함
    region: ap-northeast-2
    wait-until-deployed: true